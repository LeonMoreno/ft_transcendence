# # -------------------------
# # --------- Deigo ---------
# # -------------------------

# version: "3.9"

# networks:
#   app-network:
#     driver: bridge

# services:
#   database:
#     image: postgres:alpine
#     container_name: transcendence_db
#     hostname: database
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     ports:
#       - "5433:5432"
#     environment:
#       - POSTGRES_USER=${DB_USER}
#       - POSTGRES_PASSWORD=${DB_PASS}
#       - POSTGRES_DB=${DB_NAME}
#     networks:
#       - app-network

#   redis:
#     image: "redis:alpine"
#     container_name: transcendence_redis
#     networks:
#       - app-network

#   backend:
#     build:
#       context: .
#       dockerfile: cabraping.be/Dockerfile
#     volumes:
#       - backend_data:/app
#     ports:
#       - "8000:8000"
#     depends_on:
#       - database
#     environment:
#       - DB_NAME=${DB_NAME}
#       - DB_USER=${DB_USER}
#       - DB_PASS=${DB_PASS}
#       - DB_HOST=database
#       - DB_PORT=5432
#     networks:
#       - app-network

#   frontend:
#     build:
#       context: .
#       dockerfile: cabraping.fe/Dockerfile
#     ports:
#       - "8080:8080"
#     volumes:
#       - frontend_data:/app
#       - frontend_node_modules:/app/node_modules
#     environment:
#       - NODE_ENV=production
#     networks:
#       - app-network

#   nginx:
#     build:
#       context: ./nginx
#     container_name: nginx
#     ports:
#       - "80:80"
#       - "443:443"
#     depends_on:
#       - backend
#       - frontend
#     networks:
#       - app-network

# volumes:
#   postgres_data:
#   backend_data:
#   frontend_data:
#   frontend_node_modules:


# -------------------------
# --------- Reload ---------
# -------------------------

version: "3.9"

networks:
  app-network:
    driver: bridge

services:
  database:
    image: postgres:alpine
    container_name: transcendence_db
    hostname: database
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    networks:
      - app-network

  redis:
    image: "redis:alpine"
    container_name: transcendence_redis
    networks:
      - app-network

  backend:
    build:
      context: .
      dockerfile: cabraping.be/Dockerfile
    volumes:
      - ./cabraping.be:/app
    ports:
      - "8000:8000"
    depends_on:
      - database
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_HOST=database
      - DB_PORT=5432
    networks:
      - app-network

  frontend:
    build:
      context: .
      dockerfile: cabraping.fe/Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./cabraping.fe:/app
      - /app/node_modules
    environment:
      - NODE_ENV=production
    networks:
      - app-network

  nginx:
    build:
      context: ./nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend
    networks:
      - app-network

volumes:
  postgres_data: